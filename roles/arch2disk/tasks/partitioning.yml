#==============================================================================
# Create partitions and set up filesystem
#==============================================================================

- name: Create Swap partition
  parted:
    device: "{{ install_device }}"
    label: gpt  # Wipes partition table if it's not GPT currently
    state: present
    number: 1
    name: Swap partition
    fs_type: linux-swap
    part_end: "{{ swap_size }}MiB"
  when: swap_size|int>0  # Only create SWAP when size>0

- name: Create EFI partition
  parted:
    device: "{{ install_device }}"
    label: gpt
    state: present
    # Partition numbering will start with 2 if swap is skipped
    number: 2
    name: EFI System Partition
    fs_type: fat32
    flags: [ esp, boot ]
    # Start right after swap partition
    part_start: "{{ swap_size }}MiB"
    part_end: "{{ swap_size|int + efi_size|int }}MiB"

- name: Create root partition
  parted:
    device: "{{ install_device }}"
    label: gpt
    state: present
    number: 3
    name: ArchLinux root partition
    fs_type: btrfs
    # Start right after EFI partition
    part_start: "{{ swap_size|int + efi_size|int }}MiB"
    # Fill the device
    part_end: "100%"

# Format ......................................................................
- name: Format swap partition
  filesystem:
    dev: "{{ install_device }}1"
    fstype: swap
    force: yes
    opts: -L ArchSwap

- name: Format EFI partition FAT32
  filesystem:
    dev: '{{ install_device }}2'
    fstype: vfat
    opts: -F32
    force: yes

- name: Format root partition
  filesystem:
    dev: "{{ root_partition }}"
    fstype: btrfs
    force: yes
    opts: -L ArchRoot

# Create BTRFS subvolumes .....................................................
# As far as I can see, there is no Ansible module achieving any of this...
# TODO this task may not respect idempotency
- name: Create subvolumes
  shell: |
      mount -t btrfs {{ root_partition }} /mnt
      cd /mnt
      btrfs subvolume create root
      btrfs subvolume create home
      btrfs subvolume create snapshots
      btrfs subvolume create tmp
      cd /
      umount /mnt

- name: Mount everything
  # TODO this task may also have a problem with idempotency
  shell: >
      mount -o subvol=root,compress-force=zstd:{{ btrfs_compression_level }},space_cache,noatime,X-mount.mkdir,defaults
      {{ root_partition }} /mnt

      mount -o subvol=home,compress-force=zstd:{{ btrfs_compression_level }},space_cache,noatime,X-mount.mkdir,defaults,nodev
      {{ root_partition }} /mnt/home

      mount -o subvol=tmp,compress-force=zstd:{{ btrfs_compression_level }},space_cache,noatime,X-mount.mkdir,defaults,nodev,nosuid
      {{ root_partition }} /mnt/tmp

      mkdir -p /mnt/run

      mount -o subvol=snapshots,compress-force=zstd:{{ btrfs_compression_level }},space_cache,noatime,X-mount.mkdir,defaults
      {{ root_partition }} /mnt/run/snapshots

      mount -o X-mount.mkdir,nodev
      {{ install_device }}2 /mnt/boot

- name: Enable swap
  command: swapon {{ install_device }}1
  when: swap_size|int>0

- name: Add kernel parameters for partitions
  set_fact:
    kernel_parameters: "{{ kernel_parameters + ['root=\"LABEL=ArchRoot\" rootflags=subvol=root resume=\"LABEL=ArchSwap\"'] }}"
